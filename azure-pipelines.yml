<<<<<<< HEAD
# # Build and push an image to Azure Container Registry
# # https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# trigger:
# - master

# resources:
# - repo: self

# variables:
#   # Container registry service connection established during pipeline creation
#   # dockerRegistryServiceConnection: '623b5260-cd2f-4392-bf7b-0aba7c30852f'
#   imageRepository: 'reactapprepo'
#   containerRegistry: 'aksforgecontainerregistry.azurecr.io'
#   dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
#   tag: '$(Build.BuildId)'

#   # Agent VM image name
#   vmImageName: 'ubuntu-latest'

# stages:
# - stage: Build
#   displayName: Build and push stage
#   jobs:
#   - job: Build
#     displayName: Build
#     pool:
#       vmImage: $(vmImageName)

#       steps:
#       - task: Docker@2
#         displayName: Build and push an image to container registry
#         inputs:
#           command: buildAndPush
#           repository: $(imageRepository)
#           dockerfile: $(dockerfilePath)
#           containerRegistry: 'ACRserviceprinciplenew'
#           tags: |
#             $(tag)

#       - task: CopyFiles@2
#         inputs:
#           SourceFolder: '$(System.DefaultWorkingDirectory)/React-app-manifest'
#           Contents: '**'
#           TargetFolder: '$(Build.ArtifactStagingDirectory)'
#           OverWrite: true
#       - task: PublishBuildArtifacts@1
#         inputs:
#           PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#           ArtifactName: 'kube-manifests'
#           publishLocation: 'Container'
    

 # Docker
# # Build and push an image to Azure Container Registry
# # https://docs.microsoft.com/azure/devops/pipelines/languages/docker
=======
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
>>>>>>> 4feb3ca800626d13df0a564dda704c4677dfaedf

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
<<<<<<< HEAD
  imageRepository: 'aksforgefinal'
  containerRegistry: 'aksforgecontainerregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
=======
  # dockerRegistryServiceConnection: '623b5260-cd2f-4392-bf7b-0aba7c30852f'
  # containerRegistry: 'aksforgecontainerregistry.azurecr.io'
  # dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
>>>>>>> 4feb3ca800626d13df0a564dda704c4677dfaedf
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
<<<<<<< HEAD
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'ACRserviceprinciplenew'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/React-app-manifest'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'kube-manifests'
        publishLocation: 'Container'
=======

      steps:
      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          containerRegistry: 'ACRserviceprinciplenew'
          repository: 'reactapprepo'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
          tags: |
            latest
            $(Build.BuildId)
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/React-app-manifest/'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
          OverWrite: true
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'kube-manifests-final'
          publishLocation: 'Container'
>>>>>>> 4feb3ca800626d13df0a564dda704c4677dfaedf
